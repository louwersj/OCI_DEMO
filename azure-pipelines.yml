# Example pipeline for OCI / Terraform
#
#
# --COPYRIGHT----------------------------------------------------------
# Copyright (c) 2020 Johan Louwers.
# This program is free software: you can redistribute it and/or modify  
# it under the terms of the GNU General Public License as published by  
# the Free Software Foundation, version 3.
#
# This program is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License 
# along with this program. If not, see <http://www.gnu.org/licenses/>.
# ---------------------------------------------------------------------
#
#
# --EXPLANATION--------------------------------------------------------
# This pipeline is used as a simple example to showcase how you can use 
# Oracle OCI in combination with Terraform to deploy applications and 
# infrastructure by leveraging Azure DevOps. This pipeline is intended 
# as an example and should not be used in any production environment.
# ---------------------------------------------------------------------
#
#


trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

# ---------------------------------------------------------------------
# Download the .pem file used to auth. against the OCI. This file is 
# stored as a secure file within azure devops. 
- task: DownloadSecureFile@1
  name: pemfile
  displayName: 'download the pem file'
  inputs:
    secureFile: 'oci_api_key.pem'


# ---------------------------------------------------------------------
# start the terraform deployment from a multi-line script. We will be 
# using a number of steps to ensure that the init and deployment of the 
# .tf plan is done in the right way. Additional action is to ensure we 
# have the right variables set in a way that it is usable for terraform.
# TF_VAR_ is the standard notation for system variables used by Terraform
#
# The following variables are used:
# TF_VAR_SOURCE_VERSION   : UID based upon the source version in Github.  
# TF_VAR_private_key_path : path to the .pem private key based upon the 
#                           task for downloading the secure file variable 
#                           which is the actual path; 
#                           $(pemfile.secureFilePath)
# TF_VAR_tenancy_ocid .   : xxx

- script: |
    echo "**** Running terraform version to ensure we have the used version in the logfile."
    terraform version

    echo "**** Running terraform init to ensure all providers are being initialized."
    terraform init

    echo "**** Running terraform refresh to get the current state in Oracle Cloud (OCI)."
    terraform refresh

    echo "**** Running terraform plan to ensure we have a plannend action shown in the logs."
    terraform plan


  displayName: 
    'OCI - Terraform deployment'
  workingDirectory: 
    "./deployment/environment/terraform/"
  env: 
    TF_VAR_SOURCE_VERSION: $(Build.SourceVersion)
    TF_VAR_private_key_path: $(pemfile.secureFilePath)
    TF_VAR_tenancy_ocid: $(oci_tenancy_ocid)
    TF_VAR_compartment_ocid: $(oci_compartment_ocid)
    TF_VAR_region: $(oci_region)
    TF_VAR_private_key_password: $(oci_private_key_password)
    TF_VAR_fingerprint: $(oci_fingerprint)
    TF_VAR_user_ocid: $(oci_user_ocid)