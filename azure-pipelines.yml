# Example pipeline for OCI / Terraform
#
#
# --COPYRIGHT----------------------------------------------------------
# Copyright (c) 2020 Johan Louwers.
# This program is free software: you can redistribute it and/or modify  
# it under the terms of the GNU General Public License as published by  
# the Free Software Foundation, version 3.
#
# This program is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License 
# along with this program. If not, see <http://www.gnu.org/licenses/>.
# ---------------------------------------------------------------------
#
#
# --EXPLANATION--------------------------------------------------------
# This pipeline is used as a simple example to showcase how you can use 
# Oracle OCI in combination with Terraform to deploy applications and 
# infrastructure by leveraging Azure DevOps. This pipeline is intended 
# as an example and should not be used in any production environment.
# ---------------------------------------------------------------------
#
#


trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:


- script: echo "abc123" > $TF_VAR_private_key_path
  displayName: 'OCI - prepare private key'
  env:
    TF_VAR_private_key_path: $(oci_private_key_path)


- script: cat $TF_VAR_private_key_path
  displayName: 'step 1'


#- script: echo version $TF_VAR_SOURCE_VERSION
#  displayName: 'show the version'
#  env: 
#    TF_VAR_SOURCE_VERSION: $(Build.SourceVersion)

- script: |
    echo "running terraform version to ensure we have the used version in the logfile"
    terraform version

    echo "running terraform init to ensure all providers are being initialized"
    terraform init

    echo "Running terraform plan to ensure we have a plannend action shown in the logs"
    terraform plan

  displayName: 
    'OCI - Terraform deployment'
  workingDirectory: 
    "./deployment/environment/terraform/"
  env: 
    # TF_VAR_ is the standard notation for system variables used by Terraform
    #
    # The following variables are used:
    # TF_VAR_SOURCE_VERSION used as a UID based upon the source version in Github.  
    # TF_VAR_
    TF_VAR_SOURCE_VERSION: $(Build.SourceVersion) 
     



#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'
